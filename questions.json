[
    {
        "number": 1,
        "name": "Two Sum",
        "difficulty": "Easy",
        "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
        "options": ["Dynamic Programming", "Greedy", "Divide and Conquer", "Array", "Hash Table", "Stack", "Math", "Two Pointers"],
        "correct": 4
    },
    {
        "number": 2,
        "name": "Add Two Numbers",
        "difficulty": "Medium",
        "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return the sum as a linked list.",
        "options": ["Dynamic Programming", "Recursion", "Hash Table", "Math", "Linked List", "Sorting", "Divide and Conquer", "Two Pointers"],
        "correct": 4
    },
    {
        "number": 3,
        "name": "Longest Substring Without Repeating Characters",
        "difficulty": "Medium",
        "description": "Given a string s, find the length of the longest substring without repeating characters.",
        "options": ["Hash Table", "Math", "Sliding Window", "Greedy", "Binary Search", "Array", "Trie", "Linked List"],
        "correct": 2
    },
    {
        "number": 4,
        "name": "Median of Two Sorted Arrays",
        "difficulty": "Hard",
        "description": "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.",
        "options": ["Hash Table", "Backtracking", "Two Pointers", "Divide and Conquer", "Dynamic Programming", "Sliding Window", "Math", "Trie"],
        "correct": 3
    },
    {
        "number": 5,
        "name": "Longest Palindromic Substring",
        "difficulty": "Medium",
        "description": "Given a string s, return the longest palindromic substring in s.",
        "options": ["Trie", "Sliding Window", "Greedy", "Math", "Dynamic Programming", "Array", "Linked List", "Sorting"],
        "correct": 4
    },
    {
        "number": 6,
        "name": "Zigzag Conversion",
        "difficulty": "Medium",
        "description": "Given a string s and an integer numRows, write a method to convert s to a zigzag pattern on a given number of rows.",
        "options": ["Sorting", "Recursion", "Array", "Sliding Window", "Stack", "String Manipulation", "Linked List", "Dynamic Programming"],
        "correct": 5
    },
    {
        "number": 7,
        "name": "Reverse Integer",
        "difficulty": "Medium",
        "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range, return 0.",
        "options": ["Trie", "Recursion", "Dynamic Programming", "Sliding Window", "Stack", "Math", "Divide and Conquer", "Linked List"],
        "correct": 5
    },
    {
        "number": 8,
        "name": "String to Integer (atoi)",
        "difficulty": "Medium",
        "description": "Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer.",
        "options": ["Trie", "Stack", "Backtracking", "Greedy", "Math", "Recursion", "Linked List", "Dynamic Programming"],
        "correct": 5
    },
    {
        "number": 9,
        "name": "Palindrome Number",
        "difficulty": "Easy",
        "description": "Given an integer x, return true if x is palindrome integer.",
        "options": ["Math", "Greedy", "Trie", "Backtracking", "Hash Table", "Dynamic Programming", "Linked List", "Sorting"],
        "correct": 0
    },
    {
        "number": 10,
        "name": "Regular Expression Matching",
        "difficulty": "Hard",
        "description": "Given an input string s and a pattern p, implement regular expression matching with support for '.' and '*'.",
        "options": ["Recursion", "Backtracking", "Linked List", "Stack", "Trie", "Array", "Math", "Dynamic Programming"],
        "correct": 7
    },
    {
        "number": 11,
        "name": "Container With Most Water",
        "difficulty": "Medium",
        "description": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i are at (i, ai) and (i, 0). Find two lines, which together with the x-axis forms a container, such that the container contains the most water.",
        "options": ["Dynamic Programming", "Hash Table", "Two Pointers", "Sliding Window", "Divide and Conquer", "Recursion", "Backtracking", "Linked List"],
        "correct": 2
    },
    {
        "number": 13,
        "name": "Roman to Integer",
        "difficulty": "Easy",
        "description": "Given a roman numeral, convert it to an integer.",
        "options": ["Hash Table", "Dynamic Programming", "Trie", "Linked List", "Recursion", "Array", "Divide and Conquer", "Greedy"],
        "correct": 0
    },
    {
        "number": 14,
        "name": "Longest Common Prefix",
        "difficulty": "Easy",
        "description": "Write a function to find the longest common prefix string amongst an array of strings.",
        "options": ["Backtracking", "Stack", "Trie", "Math", "Hash Table", "Linked List", "Sliding Window", "Dynamic Programming"],
        "correct": 2
    },
    {
        "number": 15,
        "name": "3Sum",
        "difficulty": "Medium",
        "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",
        "options": ["Trie", "Math", "Linked List", "Brute Force", "Two Pointers", "Dynamic Programming", "Greedy", "Stack"],
        "correct": 4
    },
    {
        "number": 16,
        "name": "3Sum Closest",
        "difficulty": "Medium",
        "description": "Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.",
        "options": ["Hash Table", "Math", "Two Pointers", "Dynamic Programming", "Recursion", "Backtracking", "Priority Queue", "Stack"],
        "correct": 2
    },
    {
        "number": 17,
        "name": "Letter Combinations of a Phone Number",
        "difficulty": "Medium",
        "description": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.",
        "options": ["Two Pointers", "Trie", "Stack", "Math", "Binary Search", "Array", "Linked List", "Backtracking"],
        "correct": 7
    },
    {
        "number": 18,
        "name": "4Sum",
        "difficulty": "Medium",
        "description": "Given an array nums of n integers, return all the quadruplets [nums[a], nums[b], nums[c], nums[d]] such that a, b, c, and d are distinct indices and nums[a] + nums[b] + nums[c] + nums[d] == target.",
        "options": ["Sorting", "Recursion", "Trie", "Divide and Conquer", "Math", "Brute Force", "Backtracking", "Stack"],
        "correct": 0
    },
    {
        "number": 19,
        "name": "Remove Nth Node From End of List",
        "difficulty": "Medium",
        "description": "Given the head of a linked list, remove the nth node from the end of the list and return its head.",
        "options": ["Sliding Window", "Two Pointers", "Recursion", "Divide and Conquer", "Math", "Sorting", "Dynamic Programming", "Trie"],
        "correct": 1
    },
    {
        "number": 20,
        "name": "Valid Parentheses",
        "difficulty": "Easy",
        "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
        "options": ["Math", "Hash Table", "Recursion", "Two Pointers", "Array", "Trie", "Binary Search", "Stack"],
        "correct": 7
    }
]

